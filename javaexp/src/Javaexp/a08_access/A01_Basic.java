package Javaexp.a08_access;

import Javaexp.a08_access.triworld.Triangle;

public class A01_Basic {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		/*
		# 접근제어자
		
		1. 클래스명과 해당 클래스의 구성요소에 맨 앞에 붙어서
			외부에서 해당 클래스를 호출할 때, 접근의 범위를 설정하는
			제어자를 말한다.
		
		2. 접근제어자와 범위
		 
		 1) private : 필드, 생성자, 메서드
		 	- 모든 외부 클래스에서 접근할 수 없다. 내부 클래스에서만 
		 	- 사용 가능
		
		 2) default(X) : 클래스, 필드, 생성자, 메서드
		 	- 다른 패키지에 소속된 클래스에서는 호출할 수 없다.
		 	- 같은 패키지에 있는 클래스들끼리만 호출가능
		 
		 3) protected : 필드, 생성자, 메서드
		 	- 자식 클래스가 아닌 다른 패키지에 소속된 클래스는 접근불가
		 	- 외부패키지라도 상속관계가 있으면 접근가능하다.
		 	
		 4) public : 클래스, 필드, 생성자, 메서드
		 	- 외부 패키지라도 import만 하면 접근하여 사용할 수 있다. 
		 	- 패키지명.클래스명 선언 형식으로 처리하면 사용할 수 있다.(import 안해도)
		 	
		 #이야기1 
		 	선녀와 나무꾼
		 	1) 노루 나무꾼
		 		
		 		-나무꾼(클래스)-
		 	   
		 	   friendship 노루 나무꾼(노루가 숨어있는 정보)
		 	   	
		 	   	1. 노루가 숨어있는 정보 : friendship이라는
		 	   		패키지에 있는 클래스/객체 들만 접근할 수 있게 처리
		 	   		default(접근제어자가 붙지 않음) : 외부 패키지에서 접근이 불가능
		 	    
		 	    2. 날개옷을 숨긴 곳 : private로 자신만 즉,
		 	    	나무꾼 클래스만 접근해서 사용할 수 있게..
		 	   사냥꾼
		 
		 #이야기2

		 	행복하게 사는 현명한 나무꾼의 집 --> 같은패키지
		 		나무꾼
		 			private : 개인적인 비밀
		 			x : 가족들과 여행계획/ 가족들의 살림(가족들끼리만 얘기함)
		 			protected : 유산을 숨긴곳
		 				다른 패키지에 있지만, 상속관계가 있는 클래스에서는
		 				접근이 가능한 제어자
		 			public : 막내딸의 결혼식
		 		선녀아내
		 		둘쨰아들
		 		막내딸
		 	
		 	장가간 나무꾼의 첫쨰아들 집 --> 다른패키지
		 		첫쨰아들
		 		며느리
		 
		 * */
		
		Triangle t01 = new Triangle();
		t01.draw();

	}

}

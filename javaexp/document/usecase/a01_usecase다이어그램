구글에 staruml 다운로드 실행(window용)

1. 유스케이스 다이어그램의 구성요소와 표현
	1) 유스케이스 다이어그램의 필요성
		- 요구사항 정의는 개박과 설계에서 매우 큰 비중을 차지함
			- 누가 시스템을 사용할 것인가?
			- 시스템은 사용자를 위해 무엇을 해야하는가?
			- 사용자와 상호작용하기 위해 시스템이 제공해야할 인터페이스는 무엇인가?
		
		# 시스템 경계와 개발 대상
		사각창은 시스템 경계이고, 경계 내부에 위치한 usercase1,2,3은 구축할
		시스템의 기능, 시스템 경계의 외부에 위치한 act1,2는 외부 족재로 개발 대상에 미포함
		
2. 유스케이스 다이어그램 관계
	1) 액터와 유스케이스
		- 액터(actor) 
			개발할 시스템 외부의 존재, 이벤트 흐름을 시작하게 하는 객체
		- 유스케이스
			시스템 내부에 해당하는 단위기능, 사용자 관점에서 시스템을 모델링 
		
		# 일반적인 연관관계 외에 다양한 관계가 존재할 수 있음
		
	2) 액터와 유스케이스의 관계
		- 포함관계
			다른 유스케이스에서 기존 유스케이스를 재사용할 수 있음을 나타냄
		- 확장관계
			기존 유스케이스에 진행단계를 추가하여 새로운 유스케이스를 만들어내는 관계
	
	3) 액터 사이의 일반화 관계
	
	4) 유스케이스 사이의 관계
		- 포함관계
			하나의 유스케이스를 수행할 때, 같은 기능이 있는 다른 유스케이스가 반드시 수행되는 관계
			ex) 동전투입과 금액표시는 고객이 자판기에 동전을 투입하면 금액이 자동으로 표시되는 포함관계이다.
		
		- 확장관계
			확장하는 유스케이스는 상위 유스케이스로부터 어떠한 특정 조건에 의해 수행.
			기본 유스케이스를 수정하지 않고 새로운 요구사항을 추가로 표현하고자 할 떄 사용
			기준 유스케이스 이후에 이벤트 흐름을 확장 유스케이스의 수행 결과에 의존
			
	# 포함관계와 확장관계의 비교
	1. 목적
		포함관계 : 여러 유스케이스에 공통적인 기능을 표현하기 위해 사용된다.
		확장관계 : 기준 유스케이스에 부가적으로 추가된 기능을 포함하기 위해 사용된다.
	
	2. 이벤트 흐름
		포함관계 : 포함 유스케이스로 분리되는 이벤트 흐름이 필수적이다.
				기준 유스케이스 이후의 이벤트 흐름이 포함 유스케이스의 수행 결과에 의존한다.
		확장관계 : 기준 유스케이스에 기술된 조건에 따라 분기가 선택적으로 수행된다.
				기준 유스케이스 이후의 이벤트 흐름이 확장 유스케이스의 결과로 의존하지 않는다.
				
	# 엑터 사이의 관계
	1. 일반화 관계 
		엑터들이 유스케이스와 중복하여 관계가 나타나면 액터들을 통하여 일반화 관계로 표현
		추상적인 액터와 좀 더 구체적인 액터 사이의 관계를 맺어준다
		
	2. 중복관계
		유스케이스 모델링을 할 때 유스케이스 이벤트 흐름에서 중복된 부분이 있을 때 설정된다. 
				
	
	
	
	
	
	
	
	
		
		
			
# 접근제어자

1. 프로그램에서 클래스단위로 구성요소(맴버-필드/메서드)를 외부 클래스에서
	호출해서 사용하는 경우가 많다.
	ex) 쇼핑몰(포함하는 클래스) vs 회원 / 쇼핑몰(포함하는 클래스) vs 물건들

2. 이 때, 외부 클래스들이 해당 클래스의 클래스/멤버에 대한 접근을
	범위에 따라서 제한을 두어 보다 효과적으로 데이터를 보호하면
	적절한 범위로 데이터를 전달하려는 목적으로 사용한다.

3. 사전개념
	0) 객체 vs 객체 호출 개념
	1) 클래스에서만 사용하는 데이터 : 주로 필드(핵심데이트 - 읽고/쓰기) -> private
	2) 패키지 : 묶음, 클래스를 기능별로 범위로 묶어서 처리할 때 사용
	3) 상속 : 클래스와 클래스 간의 상속처리.
	4) 모두 다 접근 가능 : import or 패키지명.클래스명 public 접근

4. 단계별 실습
	1) private vs default
	2) default vs public
	3) default vs protected
	4) protected vs public

# protected 접근제어자
1. 접근범위는 default보다 넓고 public 보단좁다(default < protected < public)
	1) default보다 넓기에 default로 접근도니느 것은 모두다 접근이 된다.
	ㄴ=> 같은 패키지에 있는 클래스들은 protected로 선언한 것은 모두 다 접근이 가능하다.
		심지어 상속 관계에 있지 않더라도 접근가능하다. 
	2) default로 접근이 되지 않는 외부패키지는 상속관계가 있을 때만 접근이 된다. 
	3) public은 상속관계가 없더라도 접근이 되지만, protected는 상속관계에 있으면 접근이 된다.
	
### 1. 흥미로운 도입
상상해보세요. 여러분이 대형 쇼핑몰의 매니저입니다. 고객 정보는 한 쪽, 구매정보는 다른 한 쪽에 저장되어있습니다.
이제, 특정 고객이 어떤 상품을 구매했는지 알고 싶다면 어떻게 해야 할까요?
이때 필요한 것이 바로 SQL의 '조인(JOIN)'과 '서브쿼리(SUBQUERY)'입니다. 
이 두 기능을 사용하여 두 정보를 연결하고, 필요한 필터를 효율적으로 추출할 수 있습니다.
이것은 마치 쇼핑몰의 모든 정보를 손쉽게 찾는 것과 같습니다!

### 2. 학습목표
- 조인(JOIN)과 서브쿼리(Subquery)의 기본 개념이해
- 다양한 유형의 조인(inner, left, right, full outer)을 구별하고 사용
- 서브쿼리를 이용한 복잡한 쿼리 작성 방법 이해
- 조인과 서브쿼리의 성능 및 사용 상황에 대한 이해

### 3. 주요 핵심 키워드와 개념
- **조인(Join)**
	1) 데이터 베이스에서 관련된 여러 테이블을 연결하여 데이터를 검색하는 방법
	2) inner join, left join, right join, full outer join

- **서브쿼리(Subquery)** 
	1) 쿼리 내에 포함된 또 다른 쿼리
	2) where, from, select 절에서 시용 가능
	
### 4. 생각하고 토론해볼 내용
- 조인과 서브쿼리 사용 시, 성능에 미치는 영향은 무엇인가요?
- 어떤 상황에서 조인을 사용하고, 어떤 상황에서 서브 쿼리를 사용하는 것이 더 효율적일까요?
- 조인을 사용할 떄 발생할 수 있는 문제점은 무엇이며, 어떻게 해결할 수 있을까요?

### 5. 간단한 퀴즈
1. inner join 과 left join의 차이점은 무엇인가요?
2. 서비쿼리에서 사용되는 `in` 키워드의 역할은 무엇인가요?
3. 테이블 A와 B를 조인할 떄, A 테이블에만 있는 데이터를 가져오려면 어떤 조인을 사용해야 할까요?

### 6. 실무적용 예시
- **고객 관리 시스템** : 고객의 기본 정보와 주문 정보가 분리되어 있을 떄, 특정 고객의 주문내역을 조회하는 쿼리작성
- **재고 관리 시스템** : 싱픔 정보와 재고 정보가 별도의 테이블에 저장되어 있을 때,
	 재고가 부족한 상품의 목록을 조회하는 쿼리 작성
- **성과 분석** : 직원의 기본 정보와 성과 정보가 분리되어 있을 때, 특정 기간동안 우수한 성과를 낸 직원들의 목록을
	조회하는 쿼리 작성
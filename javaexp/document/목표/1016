### 1. 흥미로운 도입

"여러분, 언제 마지막으로 컴퓨터 프로그램이나 앱이 갑자기 중단되거나 오류 메세지를
보여준 경험이 있나요? 그럴때마다 무엇이 잘못되었는지 궁금하셨죠?
오늘은 자바에서 이러한 오류를 어떻게 처리하고 관리하는지 알아보겠습니다."

### 2.학습목표
- 자바의 예외 처리 방식 이해
- `try`,`catch`,`finally`,`throw` 키워드 사용 방법 습득
- 사용자 정의 예외 생성 방법 학습

### 3. 주요 핵심 키워드와 개념
- 예외(Exception)
- 오류(Error)
- `try`, `catch`, `finally`
- `throw`
- Checked vs Unchecked Exception
- 사용자 정의 예외(Custom Exception)

### 4. 생각하고 토론해볼 내용
- 왜 예외처리가 필요한가?
- 모든 예외를 잡아내는 것이 좋은 코드인가?
- 예외 처리와 코드 가독성 및 유지 관리 사이의 균형은 어떻게 찾을 것인가?

### 5. 간단한 퀴즈
1. 다음 중 예외처리와 관련없는 키워드는?
	- a)try
	- b)throw
	- c)int
	- d)catch

2. checked 예외와 unchecked 예외의 차이점은 무엇인가요?

3. 사용자 정의 예외를 생성하려면 어떤 클래스를 확장해야 하는가?

### 6. 실무적용 예시
-**로그 관리 시스템** : 
	- 실제 서비스 중 발생한 예외를 로그로 기록, 분석하여 원인 파악 및 대응방안 마련
-**결제 시스템** :
	- 예외처리를 통해 결제 과정중 오류 발생 시 안전하게 롤백하고, 사용자에게
		명확한 오휴 메세지 제공
-**파일 업로드 기능** :
	- 파일 형식, 크기 등의 유효성 검사 후 예외 처리를 통해 안전한 파일 업로드 보장 

**이렇게 예외 처리를 학습하면 프로그램의 안전성을 높이고 사용자 경험을 향상 시킬 수 있습니다.**
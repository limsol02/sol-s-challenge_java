** 자바스크립트의 마법같은 함수와 내장 함수 세계에 오신것을 환영합니다!**

##1. 흥미로운 도입
상상해보세요. 손에서 빛나는 마법 지팡이를 휘두르면 원하는 행동을 
수행하는 능력. 바바스크립트에서 이런 '마법 지팡이'와 같은 도구가 바로 '함수'입니다.

##2. 학습목표
- 자바스크립트에서 함수의 정의와 호출방법을 이해합니다.
- 익명 함수와 화살표 함수의 차이점을 파악합니다.
- 자바스크립트의 주요 내장 함수들을 학습하고 활용합니다.

##3. 주요 핵심 키워드와 개념
-**함수(Function)** : 특정 동작을 수행하는 코드의 집합. 재사용 가능하고 모듈화된 코드 작성을 돕습니다.
-**익명함수 (Anonymous Function)** : 이름없이 선언된 함수 
-**화살표 함수(Arrow Function)** : `=>`표기법을 사용하여 간략하게 함수를 선언하는 방식
-**내장 함수(Built-in Function)** : 자바스크립트에서 기본적으로 제공하는 함수들
						[예) `alert()`, `prompt()`, `parseInt()` 등]

##4. 생각하고 토론해볼 내용
- 함수는 코드의 재사용성을 높이기 위한 유일한 방법일까요?
- 화살표 함수와 일반 함수의 사용 케이스는 어떻게 다를까요?
- 모든 로직을 함수로 분리하는 것이 항상 좋은 방법일까요?

##5. 간단한 퀴즈 
1) 자바스크립트에서 함수를 정의하는 키워드는 무엇인가요?
 -a) `function`
 -b) `def`
 -c) `func`
 -d) `declare`

2) 화살표 함수의 특징 중 틀린 것은 무엇인가요?
 -a) 간결한 문법을 가진다.
 -b) 자신만의 `this` 바인딩을 생성한다.
 -c) `return` 키워드를 생략할 수 있다.
 -d) 항사 이름이 없는 익명함수로만 사용된다.
 
 함수는 자바스크립트의 핵심 중 하나입니다.
 효율적이고 간결한 코드를 작성하기 위해
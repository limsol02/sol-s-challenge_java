### 자바 DAO(Database Access Object)

### 1. 흥미로운 도입
DAO 패턴의 발전은 데이터 지속성(persistence)과 접근에 대한 복잡성을 단순화하는 혁신적인

### 2. 학습목표
- DAO 패턴의 목적과 중요성을 이해한다.
- 자바에서 DAO를 구현하는 방법을 배운다.
- JDBC를 사용하여 데이터베이스 연결과 CRUD작업을 수행하는 DAO를 만들 수 있다.

### 3. 주요 핵심키워드와 개념
- **DAO(Database Access Object) 패턴** : 데이터베이스 코드의 중앙 집중화, 캡슐화
- **DTO(Data Transfer Object)** : 데이터를 전송하는 객체, DAO에서 사용하여 데이터
- **JDBC(Java Database Connectivity)** : 자바 애플리케이션과 데이터베이스 사이의
- **CRUD** : Create, Read, Update, Delete - 데이터를 관리하기 위한 기본적인 네트워크

### 4. 생각하고 토론해볼 내용[조별로 정리, 제출]
- DAO 패턴을 사용하지않고 데이터베이스 작업을 진행했을때의 잠재적 문제는 무엇일까요?
- DAO와 DTO의 차이점과 각각의 역할에 대해 설명해보세요.
- DAO 패턴이 객체 지향 프로그래밍 원칙과 어떻게 부합하는지 토론해봅시다.

### 5. 간단한 퀴즈(제출)
- DAO 패턴의 주된 목적은 무엇인가요?
- 데이터베이스 연결을 관리하는 자바 클래스 라이브러리의 이름은 무엇인가요?
- CRUD 작업 중 하나를 선택하여 그 작업을 수행하는 일반적인 DAO메서드의 시그니처 














 
### 주관식 문제

1. **DAO의 주요 역할은 무엇입니까?**
   => 데이터베이스 코드의 중앙 집중화, 캡슐화 등을 처리하여 다양한 기능을 사용할 수 있게합니다.

2. **ResultSet 객체를 사용하는 목적은 무엇인가요?**
	=> ResultSet객체는 결과 처리 객체로, 서버에서 전달해온 데이터를 자바에서 이 결과 객체를 통해 우선 저장합니다.

3.**CRUD의 각 글자가 나타내는 데이터베이스 작업은 무엇인가요?**
	=> 생성(Create), 읽기(Read), 갱신(Update), 삭제(Delete) 입니다.

4. **JDBC가 자바 프로그래밍에 어떤 기능을 제공합니까?**
	=> 다양한 객체를 사용하여 데이터베이스를 연결, 대화, 결과 처리를 해주고 
	sql 쿼리를 처리하여 원하는 정보값을 얻을 수 있습니다.

5. **SQL Injection이란 무엇이며, 왜 위험한가요?**


6. **PreparedStatement와 Statement의 주요 차이점은 무엇인가요?**
	=> 보안이 되어있고 되어있지 않고의 차이 입니다.
	
7. **트랜잭션 관리가 중요한 이유는 무엇인가요?**

8. **ResultSet에서 데이터를 읽기 위해 사용되는 주요 메소드는 무엇인가요?**

9. **데이터베이스 연결을 안전하게 종료하기 위한 JDBC의 권장 사항은 무엇인가요?**

10. **DAO 패턴의 장점 중 하나를 설명해주세요.**

### 객관식 문제

1. **DAO의 기본 기능은 무엇인가요?** c
   - a) 데이터 암호화
   - b) 네트워크 관리
   - c) 데이터베이스 접근 및 관리
   - d) 사용자 인터페이스 제공

2. **ResultSet 객체는 어떤 목적으로 사용됩니까?** c
   - a) 데이터베이스 연결
   - b) SQL 쿼리 실행
   - c) 쿼리 결과 집합 처리
   - d) 트랜잭션 관리

3. **CRUD에서 'U'는 무엇을 의미합니까?** d
   - a) 사용 (Use)
   - b) 언도 (Undo)
   - c) 업그레이드 (Upgrade)
   - d) 업데이트 (Update)

4. **JDBC는 무엇의 약자입니까?** a
   - a) Java Data Base Connectivity
   - b) Java Development Basic Code
   - c) Java Dynamic Binary Compilation
   - d) Java Database Connection

5. **SQL Injection 방지를 위한 가장 좋은 방법은 무엇입니까?**
   - a) 정적 SQL 사용
   - b) PreparedStatement 사용
   - c) SQL 쿼리 문자열에 사용자 입력 직접 추가
   - d) 모든 데이터베이스 연결을 암호화

6. **PreparedStatement의 목적은 무엇입니까?** c
   - a) SQL 쿼리 최적화
   - b) 데이터베이스 보안 강화
   - c) 데이터베이스 연결 가속화
   - d) 사용자 인터페이스 향상

7. **트랜잭션 관리의 중요성은 무엇인가요?** 
   - a) 데이터베이스 성능 향상
   - b) 데이터 일관성 및 무결성 유지
   - c) 사용자 인터페이스 개선
   - d) 네트워크 트래픽 감소

8. **ResultSet 객체를 통해 데이터를 읽는 메소드는 무엇입니까?** d
   - a) `read()`
   - b) `getData()`
   - c) `executeQuery()`
   - d) `next()`

9. **데이터베이스 연결을 종료할 때 고려해야 할 사항은 무엇입니까?** c
   - a) 항상 데이터베이스에 쿼리를 남겨둡니다.
   - b) 연결을 열어둔 채로 프로그램을 종료합니다.
   - c) 연결을 닫기 전에 모든 트랜잭션을 커밋하거나 롤백합니다.
   - d) 연결 종료는 필요하지 않습니다.

10. **DAO 패턴의 한 가지 장점은 무엇입니까?** c
    - a) 데이터 암호화 자동화
    - b) 소스 코드 최적화
    - c) 비즈니스 로직과 데이터 액세스 로직 분리
    - d) 사용자 인터페이스 개선